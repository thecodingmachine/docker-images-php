name: Docker PHP Images GitHub workflow

on:
  pull_request:
    branches:
      - 'v4'
  push:
    branches:
      - 'v4'
  schedule:
    - cron: '42 3 * * 0'

jobs:
  build_test_maybe_release:
    strategy:
      matrix:
        variant: ['cli','apache','fpm']
        php_version: ['8.1','8.0','7.4', '7.3','7.2']
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Checkout
        uses: actions/checkout@v1
      - name: Build locally
        run: |
          PHP_VERSION="${{ matrix.php_version }}"
          docker buildx bake --pull --load \
            --set "*.platform=linux/amd64" \
            php${PHP_VERSION//.}-${{ matrix.variant }} 
          docker images --filter=reference=thecodingmachine/php
      - name: Login to DockerHub
        # Merge ~ push.
        if: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push to repository
        # Merge ~ push.
        if: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
        run: |
          PHP_VERSION="${{ matrix.php_version }}" \
          PHP_PATCH_VERSION=`docker run --rm thecodingmachine/php:${PHP_VERSION}-v4-slim-${{ matrix.variant }} php -v | head -n1 | grep -P '\d+\.\d+\.\d+' -o | head -n1` \
          PHP_PATCH_MINOR="${PHP_PATCH_VERSION}" \ 
          docker buildx bake \
            --set "*.platform=linux/amd64,linux/arm64" \
            --set "*.output=type=registry" \
            php${PHP_VERSION//.}-${{ matrix.variant }} 
